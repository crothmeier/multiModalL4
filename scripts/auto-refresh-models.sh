#!/bin/bash
set -euo pipefail

# Comprehensive model management script
MODELS_DIR="${MODELS_DIR:-/mnt/models}"
CHECKSUM_LOG="$MODELS_DIR/checksums.log"
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

# Create directories
mkdir -p "$MODELS_DIR"

# Initialize checksum log
if [ ! -f "$CHECKSUM_LOG" ]; then
  echo "# Model Checksums Log" > "$CHECKSUM_LOG"
  echo "# Generated by auto-refresh-models.sh" >> "$CHECKSUM_LOG"
  echo "" >> "$CHECKSUM_LOG"
fi

log_checksum() {
  local file="$1"
  local checksum
  checksum=$(sha256sum "$file" | awk '{print $1}')
  echo "[$TIMESTAMP] $file: $checksum" >> "$CHECKSUM_LOG"
}

download_with_resume() {
  local url="$1"
  local output="$2"
  local expected_sha="${3:-}"

  echo "→ Downloading $(basename "$output")..."

  # Use aria2c if available for better performance
  if command -v aria2c > /dev/null 2>&1; then
    aria2c -x 16 -s 16 -k 1M \
      --continue=true \
      --auto-file-renaming=false \
      --console-log-level=warn \
      -d "$(dirname "$output")" \
      -o "$(basename "$output")" \
      "$url"
  else
    # Fallback to wget with resume
    wget -c --progress=bar:force -O "$output" "$url"
  fi

  # Verify checksum if provided
  if [ -n "$expected_sha" ]; then
    echo "→ Verifying checksum..."
    if echo "$expected_sha  $output" | sha256sum -c -; then
      log_checksum "$output"
    else
      echo "❌ Checksum verification failed!"
      rm -f "$output"
      return 1
    fi
  else
    # Log checksum even if not verified
    log_checksum "$output"
  fi
}

echo "=== Comprehensive Model Manager ==="
echo "Target directory: $MODELS_DIR"
echo "Checksum log: $CHECKSUM_LOG"
echo

# 1. Mistral-7B-AWQ
echo "== Setting up Mistral-7B-AWQ =="
MISTRAL_DIR="$MODELS_DIR/mistral-awq"
mkdir -p "$MISTRAL_DIR"

# Main model file
if [ -f "$MISTRAL_DIR/model.safetensors" ]; then
  echo "→ Checking existing Mistral model..."
  if echo "3a5715f3e51e8b852943098259a80520f1b569e9f884db58ba447de80e1f4408  $MISTRAL_DIR/model.safetensors" | sha256sum -c - > /dev/null 2>&1; then
    echo "  ✓ Valid checksum, skipping download"
  else
    echo "  ⚠️  Invalid checksum, re-downloading..."
    rm -f "$MISTRAL_DIR/model.safetensors"
    download_with_resume \
      "https://huggingface.co/TheBloke/Mistral-7B-Instruct-v0.2-AWQ/resolve/26811efa49a9e4dc1e5b30f0f10d271c47a0c6fc/mistral-7b-instruct-v0.2-AWQ.safetensors" \
      "$MISTRAL_DIR/model.safetensors" \
      "3a5715f3e51e8b852943098259a80520f1b569e9f884db58ba447de80e1f4408"
  fi
else
  download_with_resume \
    "https://huggingface.co/TheBloke/Mistral-7B-Instruct-v0.2-AWQ/resolve/26811efa49a9e4dc1e5b30f0f10d271c47a0c6fc/mistral-7b-instruct-v0.2-AWQ.safetensors" \
    "$MISTRAL_DIR/model.safetensors" \
    "3a5715f3e51e8b852943098259a80520f1b569e9f884db58ba447de80e1f4408"
fi

# Config files
for file in config.json tokenizer.json tokenizer_config.json; do
  if [ ! -f "$MISTRAL_DIR/$file" ]; then
    echo "→ Downloading $file..."
    wget -q -O "$MISTRAL_DIR/$file" \
      "https://huggingface.co/mistralai/Mistral-7B-Instruct-v0.2/resolve/main/$file"
    log_checksum "$MISTRAL_DIR/$file"
  fi
done

# 2. DeepSeek-Coder-6.7B-GPTQ
echo
echo "== Setting up DeepSeek-Coder-6.7B-GPTQ =="
DEEPSEEK_DIR="$MODELS_DIR/deepseek-gptq"
mkdir -p "$DEEPSEEK_DIR"

# Main model file
if [ -f "$DEEPSEEK_DIR/model.safetensors" ]; then
  echo "→ Checking existing DeepSeek model..."
  if echo "d5e09d78b8ac4e5dafb4f5a768864de5bd3f7b23ad8a96e5b397c5740b0acbf1  $DEEPSEEK_DIR/model.safetensors" | sha256sum -c - > /dev/null 2>&1; then
    echo "  ✓ Valid checksum, skipping download"
  else
    echo "  ⚠️  Invalid checksum, re-downloading..."
    rm -f "$DEEPSEEK_DIR/model.safetensors"
    download_with_resume \
      "https://huggingface.co/TheBloke/deepseek-coder-6.7B-instruct-GPTQ/resolve/gptq-4bit-128g-actorder_True/model.safetensors" \
      "$DEEPSEEK_DIR/model.safetensors" \
      "d5e09d78b8ac4e5dafb4f5a768864de5bd3f7b23ad8a96e5b397c5740b0acbf1"
  fi
else
  download_with_resume \
    "https://huggingface.co/TheBloke/deepseek-coder-6.7B-instruct-GPTQ/resolve/gptq-4bit-128g-actorder_True/model.safetensors" \
    "$DEEPSEEK_DIR/model.safetensors" \
    "d5e09d78b8ac4e5dafb4f5a768864de5bd3f7b23ad8a96e5b397c5740b0acbf1"
fi

# Config files
for file in config.json tokenizer.json tokenizer_config.json quantize_config.json; do
  if [ ! -f "$DEEPSEEK_DIR/$file" ]; then
    echo "→ Downloading $file..."
    wget -q -O "$DEEPSEEK_DIR/$file" \
      "https://huggingface.co/TheBloke/deepseek-coder-6.7B-instruct-GPTQ/resolve/main/$file"
    log_checksum "$DEEPSEEK_DIR/$file"
  fi
done

# 3. LLaVA-v1.5-7B
echo
echo "== Setting up LLaVA-v1.5-7B =="
LLAVA_DIR="$MODELS_DIR/llava-7b"
mkdir -p "$LLAVA_DIR"

LLAVA_BASE="https://huggingface.co/liuhaotian/llava-v1.5-7b/resolve/main"
LLAVA_FILES=(
  "config.json"
  "generation_config.json"
  "model-00001-of-00003.safetensors"
  "model-00002-of-00003.safetensors"
  "model-00003-of-00003.safetensors"
  "model.safetensors.index.json"
  "tokenizer.model"
  "tokenizer_config.json"
  "special_tokens_map.json"
)

for file in "${LLAVA_FILES[@]}"; do
  if [ -f "$LLAVA_DIR/$file" ]; then
    echo "  ✓ $file already present"
    # Log existing file checksum
    log_checksum "$LLAVA_DIR/$file"
  else
    download_with_resume "$LLAVA_BASE/$file" "$LLAVA_DIR/$file"
  fi
done

# Validate directory structure
echo
echo "== Validating Directory Structure =="

validate_model() {
  local name="$1"
  local dir="$2"
  shift 2
  local required_files=("$@")
  local missing=()

  echo -n "→ Validating $name... "

  if [ ! -d "$dir" ]; then
    echo "❌ Directory missing!"
    return 1
  fi

  for file in "${required_files[@]}"; do
    if [ ! -f "$dir/$file" ]; then
      missing+=("$file")
    fi
  done

  if [ ${#missing[@]} -eq 0 ]; then
    echo "✓ All files present"
    return 0
  else
    echo "❌ Missing: ${missing[*]}"
    return 1
  fi
}

VALIDATION_ERRORS=0

validate_model "Mistral-7B-AWQ" "$MISTRAL_DIR" \
  "model.safetensors" "config.json" "tokenizer.json" "tokenizer_config.json" || ((VALIDATION_ERRORS++))

validate_model "DeepSeek-Coder-GPTQ" "$DEEPSEEK_DIR" \
  "model.safetensors" "config.json" "tokenizer.json" "tokenizer_config.json" "quantize_config.json" || ((VALIDATION_ERRORS++))

validate_model "LLaVA-7B" "$LLAVA_DIR" \
  "config.json" "tokenizer.model" "tokenizer_config.json" \
  "model-00001-of-00003.safetensors" "model-00002-of-00003.safetensors" "model-00003-of-00003.safetensors" || ((VALIDATION_ERRORS++))

# Summary
echo
echo "=== Summary ==="
echo "Checksum log updated: $CHECKSUM_LOG"
echo "Models directory: $MODELS_DIR"
echo

if [ $VALIDATION_ERRORS -eq 0 ]; then
  echo "✅ All models successfully downloaded and validated!"
  exit 0
else
  echo "❌ Found $VALIDATION_ERRORS validation errors!"
  echo "   Please check the missing files above."
  exit 1
fi
